{"version":3,"sources":["algorithms/StrangeAttractor.ts","algorithms/IntensityMap.ts","algorithms/quadraticIterator.ts","IntensityCanvas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StrangeAttractor","iterator","x","y","minX","minY","maxX","maxY","lyapunov","divergent","this","iterate","numIterations","newPoints","lSum","i","newX","newY","xDiff","yDiff","dl2","Math","log","push","min","max","abs","length","console","IntensityMap","width","height","map","pointsApplied","maxIntensity","transformX","transformY","Array","fill","floor","points","forEach","ym","xm","undefined","intensity","linearScale","row","buildTwoDMap","cs","x_n","y_n","buildIterators","xcs","ycs","randomCoefficients","a","round","random","coeffLabel","String","fromCharCode","labelCoeff","s","charCodeAt","coefficientsLabel","join","iteratorFromLabel","label","slice","split","Canvas","intensities","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","clearRect","colorScale","chroma","scale","col","fillStyle","pow","toString","fillRect","className","ref","App","attractorRef","intensityMapRef","useState","coefficientInput","setCoefficientInput","coefficient","setCoefficient","setIntensities","attractor","initialize","intensityMap","update","scaled","onClick","newCoefficients","value","onChange","e","target","onBlur","style","padding","IntensityCanvas","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e9ba84d.chunk.js","sourcesContent":["import { TwoDIterator, PointArray } from \"./types\";\n\nclass StrangeAttractor {\n  private iterator: TwoDIterator;\n  public minX: number;\n  public minY: number;\n  public maxX: number;\n  public maxY: number;\n  public x: number;\n  public y: number;\n  public lyapunov?: number;\n  public divergent: boolean = false;\n\n  constructor(iterator: TwoDIterator, x: number = 0.05, y: number = 0.05) {\n    this.iterator = iterator;\n    this.x = this.minX = this.maxX = x;\n    this.y = this.minY = this.maxY = y;\n  }\n\n  public initialize() {\n    this.iterate(5000);\n    if (this.divergent) {\n      return;\n    }\n    this.maxX = this.minX = this.x;\n    this.maxY = this.minY = this.y;\n  }\n\n  public iterate(numIterations: number = 100000): PointArray {\n    const newPoints: PointArray = [];\n    let lSum = 0;\n\n    for (let i = 0; i < numIterations; i++) {\n      const [newX, newY] = [\n        this.iterator[0](this.x, this.y),\n        this.iterator[1](this.x, this.y),\n      ];\n\n      const xDiff = newX - this.x;\n      const yDiff = newY - this.y;\n      const dl2 = (xDiff*xDiff) + (yDiff*yDiff);\n      if(dl2 > 0) {\n        lSum += Math.log(dl2);\n      }\n\n      this.x = newX;\n      this.y = newY;\n      newPoints.push([this.x, this.y]);\n\n      this.minX = Math.min(this.minX, this.x);\n      this.minY = Math.min(this.minY, this.y);\n      this.maxX = Math.max(this.maxX, this.x);\n      this.maxY = Math.max(this.maxY, this.y);\n\n      if (Math.abs(this.x) + Math.abs(this.y) > 100000) {\n        //Unstable\n        this.divergent = true;\n        break;\n      }\n    }\n    this.lyapunov = 0.721347 * lSum/newPoints.length;\n    console.log(\"Lyapunov\", this.lyapunov, this.divergent);\n\n    return newPoints;\n  }\n}\n\nexport default StrangeAttractor;\n","import { PointArray } from \"./types\";\n\nclass IntensityMap {\n  public map: Array<Array<number>>;\n  public width: number;\n  public height: number;\n  public pointsApplied: number;\n  private maxIntensity: number;\n  private transformX: (x: number) => number;\n  private transformY: (y: number) => number;\n\n  constructor({\n    width,\n    height,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: {\n    width: number;\n    height: number;\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n  }) {\n    this.width = width;\n    this.height = height;\n    this.map = Array(height)\n      .fill(0)\n      .map(() => Array(width).fill(0));\n    this.maxIntensity = 1;\n    const xDiff = maxX - minX;\n    const yDiff = maxY - minY;\n    this.transformX = x => Math.floor(((x - minX) * (width - 1)) / xDiff);\n    this.transformY = y => Math.floor(((y - minY) * (height - 1)) / yDiff);\n    this.pointsApplied = 0;\n  }\n\n  update(points: PointArray) {\n    points.forEach(([x, y]) => {\n      const [ym, xm] = [this.transformY(y), this.transformX(x)];\n      if (this.map[ym] === undefined || this.map[ym][xm] === undefined) {\n        // console.log(\"out of bounds\", { xm, ym });\n        return;\n      }\n      const intensity = this.map[ym][xm]++;\n      this.maxIntensity = Math.max(this.maxIntensity, intensity);\n    });\n    this.pointsApplied += points.length;\n  }\n\n  scaled() {\n    const linearScale = (i: number) => i / this.maxIntensity;\n    return this.map.map((row, y) => row.map(linearScale));\n  }\n}\n\nexport default IntensityMap;\n","import { TwoDMap, TwoDIterator, QuadraticCoefficients } from \"./types\";\n\nconst buildTwoDMap = (cs: QuadraticCoefficients): TwoDMap => (x_n, y_n) =>\n  cs[0] +\n  cs[1] * x_n +\n  cs[2] * x_n * x_n +\n  cs[3] * x_n * y_n +\n  cs[4] * y_n +\n  cs[5] * y_n * y_n;\n\nexport const buildIterators: (\n  xcs: QuadraticCoefficients,\n  ycs: QuadraticCoefficients\n) => TwoDIterator = (xcs, ycs) => [buildTwoDMap(xcs), buildTwoDMap(ycs)];\n\nexport const randomCoefficients: () => QuadraticCoefficients = () =>\n  Array(6)\n    .fill(0)\n    .map(\n      a => Math.round(Math.random() * 24 - 12) / 10\n    ) as QuadraticCoefficients;\n\nconst coeffLabel = (i: number) =>\n  String.fromCharCode(65 + 12 + Math.round(i * 10));\nconst labelCoeff = (s: string) => (s.charCodeAt(0) - (65 + 12)) / 10;\n\nexport const labelToCoefficients = (\n  s: string\n): [QuadraticCoefficients, QuadraticCoefficients] => [\n  s\n    .slice(0, 6)\n    .split(\"\")\n    .map(labelCoeff) as QuadraticCoefficients,\n  s\n    .slice(6, 12)\n    .split(\"\")\n    .map(labelCoeff) as QuadraticCoefficients,\n];\n\nexport const coefficientsLabel = (\n  xcs: QuadraticCoefficients,\n  ycs: QuadraticCoefficients\n): string => [...xcs, ...ycs].map(coeffLabel).join(\"\");\n\nexport const randomIterator = (): { label: String; iterator: TwoDIterator } => {\n  const cs = [randomCoefficients(), randomCoefficients()];\n  const label = coefficientsLabel(cs[0], cs[1]);\n  const iterator = buildIterators(cs[0], cs[1]);\n  return { label, iterator };\n};\n\nexport const iteratorFromLabel = (label: string) => {\n  const cs = labelToCoefficients(label);\n  return buildIterators(cs[0], cs[1]);\n};\n","import React, {useRef, useEffect} from 'react';\nimport chroma from 'chroma-js';\n\nconst Canvas: React.FC<({\n  intensities: number[][],\n  width: number,\n  height: number,\n})> = ({\n  intensities,\n  width,\n  height,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if(canvas === null) { return; }\n\n    const ctx = canvas.getContext('2d');\n    if(ctx === null) { return; }\n\n    ctx.clearRect(0, 0, width, height);\n\n    const colorScale = chroma.scale('BuPu');\n    const scaleTransform = 0.4; //Vary between 0 and 1 to tweak color scale\n    intensities.forEach(\n      (col, y) => col.forEach((i, x) => {\n        if(i > 0) {\n          ctx.fillStyle = colorScale(Math.pow(i, scaleTransform)).toString();\n          ctx.fillRect(x, y, 1, 1)\n        }\n      })\n    )\n  }, [intensities, height, width]);\n\n  return (\n    <div className=\"App\">\n       <br />\n       <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n}\n\nexport default Canvas;\n","import React, {useState, useEffect, useRef} from 'react';\nimport StrangeAttractor from './algorithms/StrangeAttractor';\nimport IntensityMap from './algorithms/IntensityMap';\nimport {\n  iteratorFromLabel, \n  randomCoefficients, \n  coefficientsLabel\n} from './algorithms/quadraticIterator';\nimport IntensityCanvas from './IntensityCanvas';\n\nconst App = () => {\n  const attractorRef = useRef<StrangeAttractor | null>(null);\n  const intensityMapRef = useRef<IntensityMap | null>(null);\n\n  const [coefficientInput, setCoefficientInput] = useState<string>(\"LTTKPFXOKOGH\")\n  const [coefficient, setCoefficient] = useState<string>(coefficientInput)\n\n  const [iterationFactor, setIterationFactor] = useState<number>(15)\n  const [intensities, setIntensities] = useState<number[][]>([])\n\n  const width = 1200;\n  const height = 1200;\n\n\n  const search = () => {\n    let label;\n    while(true) {\n      const newCoefficients = [randomCoefficients(), randomCoefficients()]\n      label = coefficientsLabel(newCoefficients[0], newCoefficients[1])\n      const iterator = iteratorFromLabel(label);\n      const attractor = new StrangeAttractor(iterator);\n      attractorRef.current = attractor;\n      attractor.initialize();\n\n      if(!attractor.divergent && attractor.lyapunov && attractor.lyapunov > -0.1 && attractor.lyapunov < 2.0) {\n        break;\n      }\n    }\n    setCoefficientInput(label);\n    setCoefficient(label);\n  }\n\n  const newIterator = () => {\n    const iterator = iteratorFromLabel(coefficientInput);\n    const attractor = new StrangeAttractor(iterator);\n    attractorRef.current = attractor;\n    attractor.initialize();\n    attractor.iterate(1000);\n\n    if(attractor.divergent) {\n      intensityMapRef.current = null;\n      setIntensities([]);\n      return;\n    }\n\n    const points = attractor.iterate()\n    const {maxX, maxY, minX, minY} = attractor;\n\n    const intensityMap = new IntensityMap({width, height, maxX, maxY, minX, minY})\n    intensityMapRef.current = intensityMap;\n    intensityMap.update(points);\n    setIntensities(intensityMap.scaled());\n  }\n\n  useEffect(newIterator, [coefficient]);\n\n  const onRandom = () => {\n    const newCoefficients = [randomCoefficients(), randomCoefficients()]\n    const label = coefficientsLabel(newCoefficients[0], newCoefficients[1])\n    setCoefficientInput(label);\n    setCoefficient(label);\n  }\n\n  const onNewCoefficient = () => {\n    setCoefficient(coefficientInput);\n  }\n\n  const onMorePoints = () => {\n    if(!attractorRef.current || !intensityMapRef.current) { return } \n\n    intensityMapRef.current.update(attractorRef.current.iterate());\n    setIntensities(intensityMapRef.current.scaled());\n  }\n\n  return (\n      <div>\n        <div>\n        <button onClick={search}>Random</button>\n        <input\n          value={coefficientInput}\n          onChange={(e) => setCoefficientInput(e.target.value)}\n          onBlur={() => onNewCoefficient()}\n        />\n\n        <span>{intensityMapRef.current && intensityMapRef.current.pointsApplied}</span>\n        <button onClick={onMorePoints}>+</button>\n\n        </div>\n        <div style={{padding: 50}}>\n         {intensities && <IntensityCanvas intensities={intensities} width={width} height={height} />}\n        </div>\n      </div>\n      );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}